<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo搭建个人博客推送至github</title>
    <url>/2025/02/21/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8E%A8%E9%80%81%E8%87%B3github/</url>
    <content><![CDATA[<h1 id="安装git与Nodejs"><a href="#安装git与Nodejs" class="headerlink" title="安装git与Nodejs"></a>安装git与Nodejs</h1><ul>
<li><p>在Windows上安装Git，可以从Git官网直接<a href="https://git-scm.com/downloads%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8C%89%E9%BB%98%E8%AE%A4%E9%80%89%E9%A1%B9%E5%AE%89">https://git-scm.com/downloads，然后按默认选项安</a><br>装即可。安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就<br>说明Git安装成功。<br><img src="/../../images/Pasted%20image%2020250221215415.png"></p>
</li>
<li><p>在Git中绑定Github账号，打开“Git Bash”，在命令框中依次输入两行命令：</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;Your Name&quot;</span><br><span class="line">git config --global user.email &quot;email@example.com&quot;</span><br><span class="line"># 其中Your Name和email@example.com替换成github账户名和邮箱</span><br></pre></td></tr></table></figure>
<ul>
<li>安装NodeJS<br>网址 <a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 并配置环境变量。</li>
<li>安装之后可以输入以下命令查看是否安装成功。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p><img src="/../../images/Pasted%20image%2020250221220038.png"></p>
<h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><ul>
<li>新建文件夹，在该文件夹下打开”git bach here“。<br><img src="/../../images/Pasted%20image%2020250221220553.png"></li>
<li>在命令行执行下列命令。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init myBlog</span><br><span class="line">cd myBlog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<ul>
<li>执行完成后，运行 hexo server 命令，在浏览器中输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就能够预览效果了。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p><img src="/../../images/Pasted%20image%2020250221220910.png"></p>
<h1 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h1><ul>
<li>我用的是NEXT主题：<a href="https://github.com/next-theme/hexo-theme-next%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%8C%E6%88%90%E5%90%8E%E8%A7%A3%E5%8E%8B%E5%9C%A8myBlog/themes%E8%B7%AF%E5%BE%84%E4%B8%8B%E3%80%82%E7%84%B6%E5%90%8E%E6%89%93%E5%BC%80_config.yml%E6%96%87%E4%BB%B6%E4%BF%AE%E6%94%B9%E5%A6%82%E4%B8%8B%E3%80%82">https://github.com/next-theme/hexo-theme-next，下载完成后解压在myBlog\themes路径下。然后打开_config.yml文件修改如下。</a><br><img src="/../../images/Pasted%20image%2020250221221700.png"><br>这里为了简便我将解压后的文件重命名为next，保存之后刷新 <a href="http://localhost:4000/">http://localhost:4000</a> 页面，主题就已经更改完成。</li>
</ul>
<h1 id="修改next主题配置"><a href="#修改next主题配置" class="headerlink" title="修改next主题配置"></a>修改next主题配置</h1><ul>
<li>详细配置请见</li>
</ul>
<h1 id="将博客部署在github上"><a href="#将博客部署在github上" class="headerlink" title="将博客部署在github上"></a>将博客部署在github上</h1><ul>
<li>在github上建立一个新仓库，在这里注意仓库名一定要是： 用户名.github.io，如我的用户名是jiao-ye，那么我的新仓库名就为jiao-ye.github.io</li>
<li>配置 SSH key ，要使用 git 工具首先要配置一下SSH key，将本地仓库能连接远程仓库，输入下列命令。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#email@example.com替换成github邮箱</span><br></pre></td></tr></table></figure>
<p>按照提示完成后便可以生成ssh key。<br>查看ssh key</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p><img src="/../../images/Pasted%20image%2020250221223544.png"><br>复制输出的ssh key，在github上建立新的ssh key<br><img src="/../../images/Pasted%20image%2020250221223704.png"><br><img src="/../../images/Pasted%20image%2020250221223713.png"></p>
<ul>
<li>将本地仓库与远程仓库连接起来，打开_config.yml文件进行如下修改<br><img src="/../../images/Pasted%20image%2020250221223919.png"><br><img src="/../../images/Pasted%20image%2020250221223957.png"></li>
<li>安装部署插件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<ul>
<li>执行如下两条指令生成与部署</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g # 生成</span><br><span class="line">hexo d # 部署到Github上</span><br></pre></td></tr></table></figure>
<ul>
<li>用浏览器输入 用户名.github.io 就可以访问自己的个人博客了</li>
</ul>
<h1 id="编写shell脚本方便部署"><a href="#编写shell脚本方便部署" class="headerlink" title="编写shell脚本方便部署"></a>编写shell脚本方便部署</h1><ul>
<li>在myBlog下新建deploy.sh脚本，粘贴下列代码</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 生成静态文件</span><br><span class="line">hexo clean &amp;&amp; hexo generate</span><br><span class="line"></span><br><span class="line"># 部署到 GitHub Pages</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
<ul>
<li>给与权限</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod u+x deploy.sh</span><br></pre></td></tr></table></figure>
<ul>
<li>双击deploy.sh即可一键部署<br><img src="/../../images/Pasted%20image%2020250221224633.png"></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>BUCK电路详解</title>
    <url>/2025/02/26/BUCK%E7%94%B5%E8%B7%AF%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="什么是BUCK电路"><a href="#什么是BUCK电路" class="headerlink" title="什么是BUCK电路"></a>什么是BUCK电路</h1><ul>
<li>在如下回路中，通过不断的开关mos管，我们可以得到这样的电压波形<br><img src="/../images/Pasted%20image%2020250226174346.png"><br><img src="/../images/Pasted%20image%2020250226174516.png"></li>
</ul>
<h2 id="有什么办法能让这个波形变得更加缓呢"><a href="#有什么办法能让这个波形变得更加缓呢" class="headerlink" title="有什么办法能让这个波形变得更加缓呢"></a>有什么办法能让这个波形变得更加缓呢</h2><ul>
<li>我们可以想到，电容两端的电压不能突变，我们加上电容试试<br><img src="/../images/Pasted%20image%2020250226175122.png"><br>可以看到波形如下：<br><img src="/../images/Pasted%20image%2020250226175229.png"></li>
<li>可以看到，当开关断开时，电压并没有降为0，这是因为当开关闭合时，电源同时给负载和电容供电，当开关断开时，电容又会给负载供电，所以此时的电压不会为0，此时来看看电流的波形<br><img src="/../images/Pasted%20image%2020250226180138.png"></li>
<li>为什么会出现这个尖端呢，我们可以联想一下电容的公式：<br>$$ i(t) &#x3D; C \frac{dV(t)}{dt} $$</li>
<li>当t(时间)无限小时，此时的i(电流)是无限大的，这就是尖端产生的原因。</li>
</ul>
<h2 id="有什么能让这个尖端变缓呢"><a href="#有什么能让这个尖端变缓呢" class="headerlink" title="有什么能让这个尖端变缓呢"></a>有什么能让这个尖端变缓呢</h2><ul>
<li><p>可以很自然的想到，电感的电流是不可以突变的，我们加上电感试试，但由于当开关断开是，电感的左侧是开路的，我们需要构成一个回路，当开关闭合时，这个回路是断开的，开关断开是，这个回路是闭合的，可以想到用一个二极管放置在回路中，这就叫异步BUCK，既然有异步，那肯定就有同步，将一个MOS管代替二极管的位置，同时将控制开关的信号接一个反相器来控制MOS管，这时，当开关打开时，信号经过反相器就会将MOS管截止，反之就会打开。</p>
</li>
<li><p>下面是同步BUCK的示例<br><img src="/../images/Pasted%20image%2020250226195201.png"></p>
</li>
<li><p>在这里电源电压设置为10V，占空比设为0.5，理论值应为5V<br><img src="/../images/Pasted%20image%2020250226195734.png"><br>可以看到与理论值相差不大</p>
</li>
</ul>
<h2 id="异步BUCK结构拓补图"><a href="#异步BUCK结构拓补图" class="headerlink" title="异步BUCK结构拓补图"></a>异步BUCK结构拓补图</h2><p><img src="/../images/Pasted%20image%2020250226201507.png"></p>
<h2 id="同步BUCK结构拓补图"><a href="#同步BUCK结构拓补图" class="headerlink" title="同步BUCK结构拓补图"></a>同步BUCK结构拓补图</h2><p><img src="/../images/Pasted%20image%2020250226201559.png"></p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>电路</tag>
        <tag>DC-DC</tag>
      </tags>
  </entry>
  <entry>
    <title>next主题的使用</title>
    <url>/2025/02/22/next%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="主题类型设置"><a href="#主题类型设置" class="headerlink" title="主题类型设置"></a>主题类型设置</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Schemes 主题类型设置</span><br><span class="line"></span><br><span class="line"># scheme: Muse</span><br><span class="line"></span><br><span class="line">#scheme: Mist</span><br><span class="line"></span><br><span class="line">#scheme: Pisces</span><br><span class="line"></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>有四个类型</p>
<h1 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line"></span><br><span class="line">  home: / || fa fa-home #主页</span><br><span class="line"></span><br><span class="line">  #about: /about/ || fa fa-user</span><br><span class="line"></span><br><span class="line">  tags: /tags/ || fa fa-tags #标签页</span><br><span class="line"></span><br><span class="line">  categories: /categories/ || fa fa-th #种类页</span><br><span class="line"></span><br><span class="line">  archives: /archives/ || fa fa-archive #日志页</span><br><span class="line"></span><br><span class="line">  #schedule: /schedule/ || fa fa-calendar</span><br><span class="line"></span><br><span class="line">  #sitemap: /sitemap.xml || fa fa-sitemap</span><br><span class="line"></span><br><span class="line">  #commonweal: /404/ || fa fa-heartbeat</span><br></pre></td></tr></table></figure>
<p>打开后，在myBlog\source路径下新建tags与categories文件夹，并在文件夹下建立index.md文件，<br>tags下index文件内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">title: 标签</span><br><span class="line"></span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line"></span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>categories下index文件内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">title: 种类</span><br><span class="line"></span><br><span class="line">date: &#123;&#123;date&#125;&#125;</span><br><span class="line"></span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line"></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h1 id="修改主页头像"><a href="#修改主页头像" class="headerlink" title="修改主页头像"></a>修改主页头像</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line"></span><br><span class="line">  # Replace the default image and set the url here.</span><br><span class="line"></span><br><span class="line">  url: /images/jiaoye.gif #在这里填入你头像的路径 头像格式为215 X 215</span><br><span class="line"></span><br><span class="line">  # If true, the avatar will be displayed in circle.</span><br><span class="line"></span><br><span class="line">  rounded: false</span><br><span class="line"></span><br><span class="line">  # If true, the avatar will be rotated with the cursor.</span><br><span class="line"></span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure>
<h1 id="开启搜索功能"><a href="#开启搜索功能" class="headerlink" title="开启搜索功能"></a>开启搜索功能</h1><ul>
<li>安装插件<code>hexo-generator-searchdb</code>,执行以下命令:</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<ul>
<li>修改hexo&#x2F;config.yml配置内容，新增以下内容到任意位置</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: post</span><br><span class="line">format: html</span><br><span class="line">limit: 10000</span><br></pre></td></tr></table></figure>
<ul>
<li>编辑 主题配置文件，启用本地搜索功能：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">enable: true</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>next主题</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Obsidian来编写hexo博客</title>
    <url>/2025/02/21/%E4%BD%BF%E7%94%A8Obsidian%E6%9D%A5%E7%BC%96%E5%86%99hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="下载Obsidian"><a href="#下载Obsidian" class="headerlink" title="下载Obsidian"></a>下载Obsidian</h1><ul>
<li>在官网下载Obsidian：<a href="https://obsidian.md/">https://obsidian.md/</a><br><img src="/../../images/Pasted%20image%2020250221230923.png"><br>按照提示安装，最好将目标位置改为D盘</li>
<li>安装完成，选择打开myBlog文件夹<br><img src="/../../images/Pasted%20image%2020250221231158.png"></li>
</ul>
<h1 id="配置Obsidian"><a href="#配置Obsidian" class="headerlink" title="配置Obsidian"></a>配置Obsidian</h1><ul>
<li>点击Obsidian的设置<br><img src="/../../images/Pasted%20image%2020250221231614.png"></li>
<li>点击文件与链接，忽略以下文件<br><img src="/../../images/Pasted%20image%2020250221231806.png"></li>
<li>在myBlog\source下新建images文件夹，将内部链接类型改为基于当前笔记的相对路径，关闭wiki链接，将附件默认存放路径改为指定的附件文件夹，将附件文件夹路径改为source&#x2F;images<br><img src="/../../images/Pasted%20image%2020250221232138.png"></li>
<li>将新建笔记的存放位置改为指定的附件文件夹，将存放新建笔记的文件<br><img src="/../../images/Pasted%20image%2020250221232446.png"></li>
</ul>
<h1 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h1><ul>
<li>关闭安全模式，在插件市场下载如下四个插件<br><img src="/../images/Pasted%20image%2020250222161719.png"></li>
</ul>
<h2 id="git、float-toc、tree下载无需配置"><a href="#git、float-toc、tree下载无需配置" class="headerlink" title="git、float toc、tree下载无需配置"></a>git、float toc、tree下载无需配置</h2><h2 id="Shell插件配置"><a href="#Shell插件配置" class="headerlink" title="Shell插件配置"></a>Shell插件配置</h2><ul>
<li>点击New shell command，创建新的命令</li>
<li>写入start deploy.sh命令，该脚本在已经在<a href="/2025/02/21/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%8E%A8%E9%80%81%E8%87%B3github/" title="hexo搭建个人博客推送至github">hexo搭建个人博客推送至github</a>中创建<br> <img src="/../images/Pasted%20image%2020250222162125.png"></li>
<li>点击执行按钮，就会自动部署到远程仓库</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo博客</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>电路笔记</title>
    <url>/2025/03/03/%E7%94%B5%E8%B7%AF%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文是记录在学习电路时一下概念和难懂的点</p>
<h1 id="串联谐振与并联谐振"><a href="#串联谐振与并联谐振" class="headerlink" title="串联谐振与并联谐振"></a>串联谐振与并联谐振</h1><h2 id="什么是谐振？"><a href="#什么是谐振？" class="headerlink" title="什么是谐振？"></a>什么是谐振？</h2><h3 id="RLC串联谐振"><a href="#RLC串联谐振" class="headerlink" title="RLC串联谐振"></a>RLC串联谐振</h3><ul>
<li><p>对于一个RLC串联电路，如果端电压与端电流同相位，则称该电路发生了谐振<br><img src="/../images/Pasted%20image%2020250303235346.png"></p>
</li>
<li><p>电路的阻抗为<br> $$ Z &#x3D; R + j\left( \omega L - \frac{1}{\omega C} \right) $$<br> 从上面可以看出阻抗具有虚部，那么端口电压与端口电流的相位肯定不是相同的，相差一个阻抗角</p>
</li>
<li><p>我们知道，流经电阻的电压和电流是相位相同的，那么我们是否可以把该电路的阻抗等效成一个电阻呢，当然可以，只需要令<br> $$ \left( \omega L - \frac{1}{\omega C} \right)&#x3D;0 $$<br> 此时该电路的阻抗就等效为R</p>
</li>
<li><p>可以求得：<br> $$ w &#x3D; \frac{1}{\sqrt{LC}} $$</p>
</li>
</ul>
<p> 当上式成立时，此时该电路就发生了谐振。</p>
<ul>
<li>如果我们变化这个频率，电路会怎样变化，w增大，可以推出<br>$$ \left( \omega L - \frac{1}{\omega C} \right)&gt;0 $$<br> 那么此时的阻抗角<br> $$\theta &#x3D; \arctan\left(\frac{X}{R}\right)&gt;0$$<br> 可以得出电压超前电流，那么此时该电路呈现出感性，反之则呈现出容性，此时电容与电感的总电压为0，但电容与电感两端的电压却不是为0，而是具有这样的特点：大小相同，方向相反</li>
</ul>
<h3 id="RLC并联谐振"><a href="#RLC并联谐振" class="headerlink" title="RLC并联谐振"></a>RLC并联谐振</h3><ul>
<li>对于RLC并联谐振也是一样的，为了方便，我们用导纳来表示<br><img src="/../images/Pasted%20image%2020250304003015.png"></li>
<li>电路的导纳为<br> $$ Y &#x3D; G + j\left( \omega C - \frac{1}{\omega L} \right) $$<br> 一样的我们令<br> $$ \left( \omega C - \frac{1}{\omega L} \right)&#x3D;0 $$<br> 此时电路的导纳就等效为G，端电流与端电压的相位就相同了</li>
<li>同样可以求得<br>  $$ w &#x3D; \frac{1}{\sqrt{LC}} $$</li>
<li>如果我们改变这个频率，令w增大，那么可以推出<br>   $$ \left( \omega C - \frac{1}{\omega L} \right)&gt;0 $$<br>   此时电流的相位超前电压，电路呈现容性，反之呈现感性。此时电容与电感的总电流为0，但电容与电感所在的支路电流却不是为0，而是具有这样的特点：大小相同，方向相反</li>
</ul>
<h2 id="谐振的特性"><a href="#谐振的特性" class="headerlink" title="谐振的特性"></a>谐振的特性</h2><ul>
<li>对于RLC串联电路，我们可由阻抗的模值等于<br>$$|Z| &#x3D; \sqrt{R^2 + X^2}$$<br>此时的电流等于<br>$$I &#x3D; \frac{U}Z$$<br>可知当阻抗最小时，电流最大，那么什么时候阻抗最小，如果X等于0，那么|Z|就最小，也就是发生谐振的时候，所以RLC串联电路发生谐振时，电路的电流是最大的</li>
<li>同理我们可以推出RLC并联电路发生谐振时，电路的电流是最小的</li>
</ul>
<h2 id="品质因数"><a href="#品质因数" class="headerlink" title="品质因数"></a>品质因数</h2><ul>
<li>在RLC串联谐振中，品质因数的定义是电容或电感的电压与电源的比值<br>$$Q &#x3D; \frac{w L}{R} &#x3D; \frac{1}{w C R}&#x3D;\frac{1}{R} \sqrt{\frac{L}{C}}$$<br>可以看到电路的品质因数由RLC的参数决定，如果Q大于0，则说明电容&#x2F;电感两端的电压大于电源电压，这就叫做”过电压“，在实际中，我们应该避免过电压的产生</li>
<li>在RLC并联谐振中，品质因数的定义是电容或电感的支路电流与干路电流的比值 $$<br>Q &#x3D; \frac{1}{G} \sqrt{\frac{C}{L}}$$<br>可以看到电路的品质因数也是由RLC的参数决定，如果Q大于0，则说明电容&#x2F;电感的支路电流大于干路电流，这就叫做”过电流“</li>
</ul>
<h1 id="功率"><a href="#功率" class="headerlink" title="功率"></a>功率</h1><ul>
<li>在电路中，功率可以分为3种,其中θ为阻抗角</li>
<li>有功功率<br>$$<br>P &#x3D; U I \cos{\theta}<br>$$</li>
<li>无功功率<br>$$<br>Q &#x3D; U I \sin{\theta}<br>$$</li>
<li>视在功率<br>$$<br>S &#x3D; U I<br>$$</li>
<li>对于电阻，阻抗角为0，那么电阻的有功功率P&#x3D;UI，无功功率为0</li>
<li>对于电感，阻抗角为90°，那么有功功率P&#x3D;0，无功功率P&#x3D;UI</li>
<li>对于电容，阻抗角为-90°，那么有功功率P&#x3D;0，无功功率p&#x3D;-UI</li>
<li>功率三角形(右)是由阻抗三角形(左)推出来，可以看到电抗对应的是无功功率，电阻对应的是有功功率，而视在功率可由勾股定理求出，也就是电压与电流的有效值的乘积<br><img src="/../images/Pasted%20image%2020250304215618.png"></li>
<li>复功率<br>$$<br>S &#x3D; U I^*<br>$$<br>其中I∗ 是电流相量的共轭复数<br>可以看到复功率包含了有功功率和无功功率，且复功率的模值就是视在功率<br>$$<br>S &#x3D; P + jQ<br>$$</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>电路</tag>
      </tags>
  </entry>
  <entry>
    <title>谈谈FOC</title>
    <url>/2025/03/02/%E8%B0%88%E8%B0%88FOC/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文不涉及复杂的推导，而是用简单的语言介绍FOC</p>
<h1 id="什么FOC-？"><a href="#什么FOC-？" class="headerlink" title="什么FOC ？"></a>什么FOC ？</h1><ul>
<li>FOC(磁场定向控制)，这是一种电机的控制方法，我们控制”直流电机“很简单，而控制”交流电机“却很复杂，FOC就是一种可以让我们像控制”直流电机“一样去控制“交流电机”一样。类比一下，一辆车在路上行走是什么状态，有两个，一个是速度，一个是方向，如何控制速度和方向呢，我们有方向盘和油门，可以分别控制方向和速度。这和无刷电机有什么关联呢？我们控制无刷电机控制的究竟是什么？其实也是速度和方向，那么无刷电机的速度和方向由谁来控制呢？磁场和转矩。就相当于方向盘和油门，方向盘和油门都是汽车出厂就有的。那么我们如何得到无刷电机的“方向盘”和“油门”呢？这就要用到FOC将两者从一个“混乱”的状态解耦(分离)出来，以便我们可以方便的控制。</li>
</ul>
<h1 id="为啥要用到FOC-？"><a href="#为啥要用到FOC-？" class="headerlink" title="为啥要用到FOC ？"></a>为啥要用到FOC ？</h1><ul>
<li>FOC的优点就是能让电机在低速的状态下也能保持平稳运行，能精准控制速度与力矩，同时也更加的省电，总之就是“它”行，更牛</li>
</ul>
<h1 id="FOC工作流程"><a href="#FOC工作流程" class="headerlink" title="FOC工作流程"></a>FOC工作流程</h1><ul>
<li>对FOC有了基本的了解，那么就可以看看它的工作流程了。</li>
</ul>
<h2 id="帕克与克拉克变换"><a href="#帕克与克拉克变换" class="headerlink" title="帕克与克拉克变换"></a>帕克与克拉克变换</h2><ul>
<li>前面我们提到，FOC首先要从一个”混乱“状态将“方向盘”(磁场)与”油门“(转矩)解耦出来，这时候就需要用到一个工具“帕克变换”与”克拉克变换“。</li>
</ul>
<h3 id="克拉克变换"><a href="#克拉克变换" class="headerlink" title="克拉克变换"></a>克拉克变换</h3><p>直接附上公式<br>​$$\begin{bmatrix}V_\alpha \V_\beta\end{bmatrix}&#x3D;\frac{2}{3}\begin{bmatrix}1 &amp; \frac{1}{2} &amp; -\frac{1}{2} \0 &amp; \frac{\sqrt{3}}{2} &amp; -\frac{\sqrt{3}}{2}\end{bmatrix}\begin{bmatrix}V_a \V_b \V_c\end{bmatrix}$$                        </p>
<ul>
<li>输入：三相电压</li>
<li>输出：Vα​，Vβ​​</li>
<li>Vα​ 和 Vβ是两相静止坐标系的分量<br>这样我们就把三相的电压转换成两相，但这还不够，我们还需要借助另一个工具“帕克变换”，利用这个变换可以生成一个始终与转子“对齐”的坐标系</li>
</ul>
<h3 id="帕克变换"><a href="#帕克变换" class="headerlink" title="帕克变换"></a>帕克变换</h3><h1 id="公式-begin-bmatrix-V-d-V-q-end-bmatrix"><a href="#公式-begin-bmatrix-V-d-V-q-end-bmatrix" class="headerlink" title="公式$$\begin{bmatrix}V_d \V_q\end{bmatrix}"></a>公式<br>$$\begin{bmatrix}<br>V_d \<br>V_q<br>\end{bmatrix}</h1><p>\begin{bmatrix}<br>\cos\theta &amp; \sin\theta \<br>-\sin\theta &amp; \cos\theta<br>\end{bmatrix}<br>\begin{bmatrix}<br>V_\alpha \<br>V_\beta<br>\end{bmatrix}$$</p>
<ul>
<li>Vd 是直轴分量</li>
<li>Vq 是交轴分量</li>
<li>θ 是旋转角度（通常为转子角度或同步旋转角度）<br>到这里，我们就得到了两个量 Vd，Vq，也就是“方向盘”(磁场)和“油门”(转矩)，通过控制这两个量我们就能很好的控制无刷电机了</li>
<li>到这FOC的实际流程图为，只需要控制Uq与Ud，就能控制Ua，Ub，Uc<br><img src="/../images/Pasted%20image%2020250309162556.png"><br>这就是FOC的核心思想，通过这两个工具实现电压电流的解耦控制，到此，我们已经获得了最重要的两个量，但是在实际中该如何实现呢</li>
</ul>
<h1 id="测角度"><a href="#测角度" class="headerlink" title="测角度"></a>测角度</h1><ul>
<li>还记得在上文中帕克变换中的那个θ吗，这个量是需要我们测出来的，大多用的是磁传感器，简单来说就是在转子下方粘一个磁铁，然后对着磁传感器，通过读取磁传感器的信息，就能获得转子的机器角度，但这个角度并不是上文中的θ，还需要乘极对数，我们称之为电角度，也就是说<br>$$<br>电角度 &#x3D; 机器角度 \cdot 极对数<br>$$</li>
<li>极对数就是电机磁极的对数<br>如图<br><img src="/../images/Pasted%20image%2020250309164801.png"><br>该电机中间的就是磁铁，极对数为7，也就是说，上文中的θ等于磁传感器的数值乘7</li>
<li>到此，FOC的核心变量就全部已知了，我们就可以顺利的走过如下流程<br><img src="/../images/Pasted%20image%2020250309162556.png"></li>
</ul>
<h1 id="生成三相电压"><a href="#生成三相电压" class="headerlink" title="生成三相电压"></a>生成三相电压</h1><ul>
<li>在上文中，我们已经获得了Ua，Ub，Uc，如果我们有一个可以“随心所欲”的三相电源，那么，我们只需要让该电源按照我们给定的电压去变换就行，但显然是不可能的。一般供电，我们都是用直流电源，这时，大名鼎鼎的SVPWM就来了，这也是FOC中最难的一部分</li>
<li>通过面积等效原理可以知道下图的两个波形是等效的，这不是正好符合我们心意吗，对于直流电源我们很容易生成矩形波(b)，那么我们只需要合理的控制开关不就能等效成下图的(a)吗<br><img src="/../images/Pasted%20image%2020250309170657.png"></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>无刷电机</tag>
        <tag>FOC</tag>
      </tags>
  </entry>
</search>
